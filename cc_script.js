document.addEventListener('DOMContentLoaded', function () {
    const radiusButtons = document.querySelectorAll('.radius-button');
    const srokSlider = document.getElementById('srokSlider');
    const kolSlider = document.getElementById('kolSlider');
    const diskToggle = document.getElementById('diskToggle');
    const summaValue = document.getElementById('summaValue');
    const dateInput = document.getElementById('dateInput');
    const phoneInput = document.getElementById('phoneInput');
    const nameInput = document.getElementById('nameInput');
    const addressInput = document.getElementById('addressInput');
    const submitBtn = document.getElementById('submitBtn');

    let selectedRadius = 125;
    let selectedSrok = 3;
    let selectedKol = 4;
    let isDiskEnabled = false;

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–æ–∫ —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ Radius
    radiusButtons.forEach(button => {
        button.addEventListener('click', () => {
            selectedRadius = parseInt(button.dataset.radius);
            updateSumma();
            updateButtonStates(button);
        });
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Å–ª–∞–π–¥–µ—Ä–∞ –°—Ä–æ–∫–∞ —Ö—Ä–∞–Ω–µ–Ω–∏—è
    srokSlider.addEventListener('input', () => {
        selectedSrok = parseInt(srokSlider.value);
        updateSumma();
        updateSrokValue();
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Å–ª–∞–π–¥–µ—Ä–∞ –ö–æ–ª–∏—á–µ—Å—Ç–≤–∞ —à–∏–Ω
    kolSlider.addEventListener('input', () => {
        selectedKol = parseInt(kolSlider.value);
        updateSumma();
        updateKolValue();
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ç—É–º–±–ª–µ—Ä–∞ "–° –¥–∏—Å–∫–æ–º"
    diskToggle.addEventListener('change', () => {
        isDiskEnabled = diskToggle.checked;
        updateSumma();
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ó–∞–∫–∞–∑–∞—Ç—å —É—Å–ª—É–≥—É"
    submitBtn.addEventListener('click', () => {
        sendOrder();
    });

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π Summa –∏ –≤—ã–≤–æ–¥–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
    function updateSumma() {
        const result = selectedRadius * selectedKol * selectedSrok * (isDiskEnabled ? 1.2 : 1);
        summaValue.textContent = result.toFixed(0);
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π Srok –∏ –≤—ã–≤–æ–¥–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
    function updateSrokValue() {
        document.getElementById('srokValue').textContent = selectedSrok;
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π Kol –∏ –≤—ã–≤–æ–¥–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
    function updateKolValue() {
        document.getElementById('kolValue').textContent = selectedKol;
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥—Å–≤–µ—Ç–∫–∏ –∞–∫—Ç–∏–≤–Ω–æ–π –∫–Ω–æ–ø–∫–∏ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π –∫–Ω–æ–ø–æ–∫
    function updateButtonStates(selectedButton) {
        radiusButtons.forEach(button => {
            const radiusValue = parseInt(button.dataset.radius);
            const isActive = button === selectedButton;
            button.classList.toggle('active', isActive);
        });
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏
    async function sendOrder() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É–∫–∞–∑–∞–Ω—ã –ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ
        if (!phoneInput.value.trim() || !nameInput.value.trim()) {
            alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è (–∏–º—è –∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞)!');
            return;
        }

        // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –∑–∞—è–≤–∫–∏
        const orderDetails = `............................................
            –ò–º—è: ${nameInput.value}
            –¢–µ–ª–µ—Ñ–æ–Ω: ${phoneInput.value}
            ‚óè –î–∞—Ç–∞ –≤—Å—Ç—Ä–µ—á–∏: ${dateInput.value} üëà
            –ê–¥—Ä–µ—Å –≤—ã–≤–æ–∑–∞: ${addressInput.value}
            ‚óè –ö–æ–ª—ë—Å–∞: ${selectedRadius} ‚ûΩ ${selectedKol}—à—Ç. ‚ûΩ ${isDiskEnabled ? '–° –¥–∏—Å–∫–∞–º–∏' : '–ë–µ–∑ –¥–∏—Å–∫–æ–≤'}
            ‚óè –°—Ä–æ–∫ —Ö—Ä–∞–Ω–µ–Ω–∏—è: ${selectedSrok}–º–µ—Å.
            ............................................
        `;

 // –í–∞—à —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏ ID —á–∞—Ç–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª—è
    const botToken = '6473374979:AAH8OHCxWN2kO0ep9wrbLXolk2ys4__GLqg';
    const chatId = '96609347';

        // –§–æ—Ä–º–∏—Ä—É–µ–º URL –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ API –¢–µ–ª–µ–≥—Ä–∞–º–∞
    const telegramApiUrl = `https://api.telegram.org/bot${botToken}/sendMessage`;
    
    try {
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ API Telegram –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–∫—É—â–µ–º —á–∞—Ç–µ (–¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–±—Ä–∞—Ç–Ω–æ)
        const response = await axios.get(`https://api.telegram.org/bot${botToken}/getChat?chat_id=${chatId}`);
        const userId = response.data.result.id;

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –æ–±—â–∏–π —á–∞—Ç
        const commonTelegramApiParams = {
            chat_id: chatId,
            text: `üìå –ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê\n\n${orderDetails}`
        };
        await axios.post(telegramApiUrl, commonTelegramApiParams);

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–±—Ä–∞—Ç–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        const userTelegramApiParams = {
            chat_id: userId,
            text: `‚úÖ–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!
  ‚óè ‚ö°–û–∂–∏–¥–∞–π—Ç–µ –∑–≤–æ–Ω–∫–∞ –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞‚ö°\n\n${orderDetails}`,
        };
        await axios.post(telegramApiUrl, userTelegramApiParams);

        console.log('‚úÖ–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ –¢–µ–ª–µ–≥—Ä–∞–º!');
    } catch (error) {
        console.error('‚ùå–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏ –≤ –¢–µ–ª–µ–≥—Ä–∞–º:', error);
    }
}
});
